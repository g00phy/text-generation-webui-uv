[build-system]
build-backend = "pdm.backend"
requires = ["pdm-backend"]

[project]
name = "tgw"
version = "0.1.0"
requires-python = ">=3.11,<3.12"
authors = [
    { name = "Gopalakrishna Ramachandra" }
]
dependencies = [
    "accelerate==1.2.*",
    "bitsandbytes==0.45.*",
    "colorama",
    "datasets",
    "einops",
    "fastapi==0.112.4",
    "gradio==4.37.*",
    "jinja2==3.1.5",
    "markdown",
    "numba==0.59.*",
    "numpy==1.26.*",
    "pandas",
    "peft==0.12.*",
    "Pillow>=9.5.0",
    "psutil",
    "pydantic==2.8.2",
    "pyyaml",
    "requests",
    "rich",
    "safetensors==0.5.*",
    "scipy",
    "sentencepiece",
    "tensorboard",
    "transformers==4.48.*",
    "tqdm",
    "wandb",
    "SpeechRecognition==3.10.0",
    "flask_cloudflared==0.0.14",
    "sse-starlette==1.6.5",
    "tiktoken",
    "torchvision==0.19.1",
    "torchaudio==2.4.1",
    "bitsandbytes==0.45.*",
    "py-cpuinfo==9.0.0",
    "torch @ https://download.pytorch.org/whl/cu121/torch-2.4.1%2Bcu121-cp311-cp311-linux_x86_64.whl",
    "torchvision @ https://download.pytorch.org/whl/cu121/torchvision-0.19.1%2Bcu121-cp311-cp311-linux_x86_64.whl",
    "torchaudio @ https://download.pytorch.org/whl/cu121/torchaudio-2.4.1%2Bcu121-cp311-cp311-linux_x86_64.whl",
    "llama_cpp_python_cuda_tensorcores @ https://github.com/oobabooga/llama-cpp-python-cuBLAS-wheels/releases/download/textgen-webui/llama_cpp_python_cuda_tensorcores-0.3.6+cu121-cp311-cp311-linux_x86_64.whl",
    "flash_attn @ https://github.com/Dao-AILab/flash-attention/releases/download/v2.7.3/flash_attn-2.7.3+cu12torch2.4cxx11abiFALSE-cp311-cp311-linux_x86_64.whl",
    "exllamav2 @ https://github.com/oobabooga/exllamav2/releases/download/v0.2.7/exllamav2-0.2.7+cu121.torch2.4.1-cp311-cp311-linux_x86_64.whl"
]

[tool.pdm]
package-dir = "."


[tool.black]
line-length = 76
target-version = ["py311"]

[tool.coverage.paths]
source = ["*/site-packages", "tgw"]

[tool.coverage.report]
exclude_lines = [
    "def __repr__",
    "if 0:",
    "if __name__ == __main__:",
    "if self.debug",
    "if settings.DEBUG:",
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
]
fail_under = 60
show_missing = true

[tool.coverage.run]
branch = true
omit = ["tgw/__init__.py"]
relative_files = true
source = ["tgw"]


[tool.pip-tools]
# Set generate-hashes for pip-compile
generate-hashes = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report=term --cov-report=xml:coverage.xml --junitxml=junit.xml"
junit_suite_name = "tgw"

[tool.ruff]
line-length = 76
lint.ignore = [
    "COM812", # Allow ruff formatter
    "ISC001", # Allow ruff formatter
    "N818", # Don't want to have to call exceptions *Error
    "S101", # Of course we want to use assert
]
lint.select = [
    "A",
    "ANN",
    "ARG",
    "ASYNC",
    "B",
    "C4",
    "COM",
    "E",
    "EM",
    "EXE",
    "F",
    "FA",
    "FIX",
    "G",
    "I",
    "ICN",
    "INP",
    "ISC",
    "N",
    "NPY",
    "PD",
    "PERF",
    "PIE",
    "PT",
    "PTH",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "TCH",
    "TD",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT",
]
fix = true
target-version = "py311"

[tool.uv]
dev-dependencies = [
    "bpython>=0.24",
    "coverage[toml]>=7.6.1",
    "deptry>=0.19.0",
    "mypy>=1.11.1",
    "pre-commit>=3.8.0",
    "pytest-cov>=5.0.0",
    "pytest-gh-log-group>=0.2.0",
    "pytest-randomly>=3.15.0",
    "pytest>=8.3.2",
    "python-semantic-release>=9.8.7",
    "ruff>=0.5.7",
    "toml-sort>=0.23.1"
]
